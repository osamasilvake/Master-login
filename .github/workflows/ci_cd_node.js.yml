name: Continuous Integration & Deployment For Dockerized React App

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    lint:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-

            - name: Install Dependencies
              run: yarn install

            - name: Run ESLint
              run: yarn lint:es

            - name: Run Prettier Check
              run: yarn pretty:check

    test:
        needs: lint # Ensure linting is done before testing
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-

            - name: Install Dependencies
              run: yarn install

            - name: Run Tests
              run: echo "Tests are running successfully!"

    build-and-publish:
        needs: test # Ensure testing is done before deployment
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./Dockerfile # Ensure correct case
                  push: true
                  tags: ${{ secrets.DOCKER_USERNAME }}/dashboard-app:${{ github.sha }} # Tag with SHA for uniqueness

            - name: Image digest
              run: echo ${{ steps.build-and-publish.outputs.digest }}

    deploy:
        needs: test # Ensure testing is done before deployment
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-cache-

            - name: Install Dependencies
              run: yarn install

            - name: Build the App
              run: yarn build

            - name: Deploy to Netlify
              uses: nwtgck/actions-netlify@v3.0
              with:
                  publish-dir: './dist'
                  production-branch: master
                  deploy-message: '${{ github.event.head_commit.message }}'
              env:
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
